# -*- coding: utf-8 -*-
"""Experiment  6.Decision tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XzJIssi2KjhdoJK73_YLonL9CXWMMhC6
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

data=load_iris()
X=data.data
y=data.target
print(X.shape,y.shape)

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier#for checking testing results
from sklearn.metrics import classification_report, confusion_matrix#for visualizing tree 
from sklearn.tree import plot_tree
X_train, X_test, y_train, y_test = train_test_split(X , y, test_size = 25, random_state = 10)
clf=DecisionTreeClassifier()
clf.fit(X_train,y_train)

y_pred =clf.predict(X_test)
print("Classification report - \n", classification_report(y_test,y_pred))

cm = confusion_matrix(y_test, y_pred)
print(cm)
from sklearn import tree
fig,axes = plt.subplots(nrows=1,ncols=1,figsize =(4,4),dpi=200)
tree.plot_tree(clf,feature_names=data.feature_names,class_names=data.target_names,filled=True)
plt.show()
fig.savefig("/content/iris_tree.png")

